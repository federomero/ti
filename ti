#! /usr/bin/env ruby

unless ARGV.length > 0
  puts "Usage: ti <client> [task]"
  exit 1
end

client = ARGV.shift.dup
task = ARGV.dup.join(' ')

require 'rubygems'

module Ti
  Timer = Object.new
  class << Timer

    attr_accessor :client, :task, :minutes

    def every n, &block
      on :minutes do
        block.call if minutes % n == 0
      end
    end

    def on name, &block
      callbacks[name] ||= []
      callbacks[name] << block
    end

    def callbacks
      @callbacks ||= {}
    end


    def finish
      run_callbacks(:finish)
      exit 0
    end

    def start
      self.minutes = -1
      run_callbacks(:start)
      loop do
        begin
          self.minutes += 1
          start_time = Time.now
          run_callbacks(:minutes)
          elapsed = Time.now - start_time
          sleep([60 - elapsed, 0].max)
        rescue SystemExit, Interrupt
          finish
        end
      end
    end

    protected

    def run_callbacks name
      callbacks[name].each(&:call) if callbacks[name]
    end
  end
end

Ti::Timer.client = client
Ti::Timer.task = task

plugins_dir = ENV['TI_PLUGINS_DIR'] || File.join(ENV['HOME'], '.ti')
Dir[File.join(plugins_dir, "*.rb")].each {|file| require file }
Dir[File.join(plugins_dir, "*/init.rb")].each {|file| require file }

Ti::Timer.start
